### 用途
  本軟體是一個程式語言MIP(macro interactive processing)及其操作介面，
  所以本軟體稱為MIP builder.
  它幫你處理巨集、轉換二維資料表、快速生產程式給公司各員工使用。
  它幫助你傳遞資料，例如從這機器這資料庫傳到另一機器另一資料庫。
  它幫助你寫出圖形辨認的程式，用來自動下圍棋。
  本軟體的整個目的是縮短程式碼，提升資訊人員的生產力。
  
### 適用場合  
  在十幾年前，我看到某資訊人員每天都在下SQL指令，來應付user的各種需求，
  他說user的需求變來變去很難寫成程式，要是有一個網頁型的SQL輸入框，
  讓他任意調整參數，調到滿意存起來就自動成為user的功能，這樣才能容易過日子。
  於是我作了一個產出程式的母機，這就是MIP的出發點，也是MIP最主要的應用。
  本文將以四個軟體系統，做為MIP的應用範例: 
  進銷退存系統，倉庫撿貨系統，問卷系統，資料傳輸系統。

  這十幾年來，資訊界流行一些越來越長的程式語言，寫一個動作就很費字，
  寫到哪一天才能寫出個應用系統? 以c#或java為例，為了一句SQL要先寫一大堆字，
  這些都是固定字，等於是一串固定的咒語，既是咒語，難道不能簡化成短語嗎?
  我只好把長咒語視為低階機器語言，利用MIP內含的特性(巨集、宏、macro)把它們改成短語。
  一次產生幾十個長程式，這樣MIP就是一個程式產生器。

  這幾年流行的程式語又更長了，程式中不斷宣告物件的屬性。
  1個屬性佔1行，1個物件有9個屬性，5個物件就45行， 
  這些物件都長得很像，整篇程式看起來就幾個字不斷的繞口令。
  難道我們不能把它排成9乘5的矩陣，讓表達簡潔嗎?所以我讓MIP有操作矩陣的能力。
  若進一步把圍棋的點位視為矩陣，叫MIP來幫忙，那麼寫圍棋圖形辨認的程式就容易了，
  使用MIP不必掛一堆黑箱library，也不必用昂貴的機器。
  本文從MIP的基本指令開始說明，延伸談到高級應用。
  
### 安裝  
  本軟體由1個程式檔以及3個參數設定檔構成。
  (webc.aspx,     cDBlist.txt, cSPlist.txt, cUSlist.txt)
  請到 https://github/longinlin/MIP3.1 點畫面上的[view code]下載
  本軟體只能在windows+IIS作業環境下使用。
  
  打開你要安裝的電腦，
  建子目錄c:\MIP\webc ，貼入webc.aspx，
  建子目錄c:\MIP\webd ，貼入上述後面3個檔案， 
  建子目錄c:\MIP\webt ，備用，此目錄要允許IIS寫入資料，
  建子目錄c:\MIP\webq ，備用，此目錄要允許IIS寫入資料，
  接著尋找這電腦上該有的IIS管理員，
    若看不到IIS卻看到伺服器管理員，點進去看到角色，
    角色下有網頁伺服器， 按右鍵新增角色服務，就可顯示IIS
  接著在IIS裡建立虛擬目錄webc，使實際位置指向 c:\MIP\webc
  接著打開瀏覽器，網址打localhost/webc/webc.aspx，
  看到請你登入的畫面即安裝完成。
  微軟各版常讓人安裝受挫，若遇安裝不順，淡定，參看文末的: ### 安裝問題集解

### 寫一個簡單的程式
  打開瀏覽器，網址打localhost/webc/webc.aspx，看到登入畫面
  輸入帳密(admin,admin9)，看到出現了上下兩個輸入框，
  於下框寫 
    show== hello world
  按[確定] 即可看到結果
  
### 寫一個簡單的加法
  於下框寫
    aabb==eval! 10+5
    ccdd==dateadd!!5
    show==aabb , ccdd
  按[確定]即可看到 15 逗點 今天加5天的日期
  
    show==eval!3*5
  按[確定]即可看到 15 
  
### 顯示九九乘法表
  於下框寫
    uuuu==1,2,3,4,5,6,7,8,9
    vvvv==1,2,3,4,5,6,7,8,9
    show==glu2v!uuuu!vvvv![ui]x[vi]=@{eval![ui]*[vi]}!td 
  按[確定]即可看到九九乘法表
     
### 寫一個簡單的SQL 或呼叫DOS指令
  於下框寫
    conndb==db36
    sqlcmd==select * from tbyy
  按[確定]即可看到 tbyy 的內容。

  要呼叫DOS指令，則於下框寫
  doscmd==
    echo 123 > c:\tmp\test2.txt
    echo 456 > c:\tmp\test3.txt
  按[確定]即可在 c:\tmp 看結果
   
### 輸入、計算、輸出、工程畫面、使用畫面
  所有的電腦程式都可分解為(輸入、計算、輸出)三段，在MIP如何表達呢?
 
  於上框寫 who==John        這就是輸入
  於下框寫 show==hello who  這就是計算
  按[確定]後，畫面出現 hello John 這就是輸出 輸出到螢幕上
  
  如果要輸出到檔案呢? 只要於下框寫:
    answer==hello who
    saveToFile, a123.txt ==answer 
  按[確定]就會輸出到檔案c:/MIP/webt/a123.txt 。 
  若螢幕回報說有錯 說不能寫入，則要叫起IIS或檔案總管去修改權限，請看安裝說明段。
  
  (輸入、計算、輸出)三段都有了，想把以上的程式變成功能給其他人使用，怎麼做?
  看到螢幕最下方還有兩個細細的輸入框，分別填上 test2.mip 和 測試2，
  再按[save new]，網頁顯示儲存完成
  再按[see spList]，網頁顯示功能列表，
  以上這些操作畫面叫做 "工程畫面"
  
  選擇[登出]按下去，網頁顯示請登入的畫面，
  輸入帳號密碼(0800,0809) 按[登入]，網頁就有一個[測試2]的超連結給使用者了
  現在你看到的畫面叫做 "使用畫面"， 你可以像其它使用者一樣開始操作功能了。
    
### 呼叫更多功能
  從上面的例子可以看到==是指定符號，
  不要在乎指定符號左右方的空白，那些空白都會切掉。也不要在乎其左右方是數字或文字，
  因為本軟體裏面只有一種資料型態，那就是文字。
  本軟體在乎文字之上可以建立文字的序列，也就是向量，
  在乎文字之上可以建立二維序列，也就是矩陣，
  在乎文字之上可以組成一段文章，也就是程式。
  本軟體在乎文字、向量、矩陣、文章的各種組合，目標是簡化程式寫作。

  要充分發揮MIP的功能，
  還需瞭解3清單設定:(功能清單、 使用者清單、 資料庫清單)，
  還需瞭解:(自定關鍵字、既定關鍵字、自定函數、既定函數)，
  最後瞭解:(染色、遮罩、後定字)，
  這樣MIP就介紹完整了，它簡短，卻能幫助你寫作及管理幾百個複雜的程式。
  以下就從 "編輯功能清單" 開始說明。
  
  
### 編輯功能清單
  本軟體把一個公司需要的眾多功能顯示在一頁畫面上，讓使用者點選。
  要編輯功能清單就打開c:\MIP\webd\cSPlist.txt，看到如下內容:
    [td]  
    [tf]功能段代號A, 功能段名稱A
        程式檔名1,   程式名稱1  
        程式檔名2,   程式名稱2  
    [tf]功能段代號B, 功能段名稱B
        程式檔名3,   程式名稱3  
        程式檔名4,   程式名稱4 
  以[td]開頭的這一行使功能清單向右換欄，以免清單往下太長。
  以[tf]開頭的這一行代表其下方一小段是一個功能段，
  將來在cusList.txt裏可以指定某人可以操作幾個功能段。
 
### 編輯使用者清單
  本軟體可以管理使用者權限，
  打開c:\MIP\webd\cUSlist.txt
  每一行的欄位依序是姓名、帳號、密碼、 公司名稱、 部門名稱、 員工工號、 可允許使用的功能段
  本軟體可以允許多個公司多個部門的人員一起使用 所以要寫下 公司名稱 部門名稱 員工工號 
  若只允許某人僅能使用某3個功能段 則在 "可允許使用的功能段" 那欄寫上3個功能段名稱，例如 aa bb cc，
  若要允許某人可以使用全部功能段  則在 "可允許使用的功能段" 那欄寫上all

### 編輯資料庫清單
  MIP的基本運作不需資料庫，若你讓它連接到多個資料庫，它就如虎添翼。
  連接方式如下，打開 c:\MIP\webd\cDBlist.txt 看到如下內容
     HOME      : ms    : some connection string1
     db123     : ms    : some connection string2
     db456     : ms    : some connection string3
  第一行宣告一個預設的資料庫，將來寫程式沒說連接哪個資料庫，就是連接這一個       
  第二行宣告一個稱謂db123，以後只要說連接db123， MIP就去連接這資料庫
  接著在MIP工程畫面輸入一些字，舉例:
      conndb==db123
      sqlcmd==select * from tb2
  就可看到資料表 tb2 了
  
### 自定關鍵字、既定關鍵字 
  在工程畫面寫:
      x2==2
      x3==3
      show==x2+x3
  其中x2和x3就是自定關鍵字，MIP原本不認識x2和x3，你定義了它們，MIP就記住了。
  其中show  就是既定關鍵字，MIP執行show既定的動作，也就是顯示，顯示了 2+3
  另外還有留幾個既定關鍵字，純粹是預先定義好的字，例如 #userid 就是你的帳號。
      show== #userid
  又例如 thispg也是既定關鍵字，就是你現在正操作的程式名稱。      
  上述本軟體只顯示2+3 ，不會加在一起嗎，會，要用到函數:
      show==add!x1!x2      
  會顯示5 這裏用到了既定函數add。

### 自定函數、既定函數
  既定函數除了add還有很多，例如複雜一點的計算有函數eval:
      show==eval!2*3+1  
  畫面會顯示7 ，又例如比較相等與否:
      x2==2
      show==ifeq!x2!2!yes2 !not2  
  這樣會顯示yes2  看得出來函數的參數用驚嘆號隔開。
  函數也可以夾雜在字裏行間使用，例如:
      show== Hi, I was happy in recent @{eval!2*3+1} days 
  也就是整個函數用  @{}括住。 這串字在口語怎麼唸呢?
  @看起來像是ca ， 所以 @{}唸作call
  @{function3!parameter1!parameter2} 唸作call fucntion3 parameter1 parameter2
  
  按[確定]於是畫面顯示 
      Hi, I was happy in recent 7 days    
  有了既定函數，你也可以自己定義函數，例如:
      myFunc==I have someOne
      show==@{myFunc!have=love!someOne=Mary}
  畫面會顯示            I love Mary 
  不用特別宣告什麼函數開頭結尾，也不用宣告參數。函數就是字，一串字。
  
  有些程式語言特別喜歡用{}，就是c啊 java啊這一系列。
  為了讓MIP可以好好操控並生產這類的程式，只好改變字裏行間函數呼叫法:
     aa==@{func!p1!p2}@ 
  也就是用兩個@ ，像是用兩個耳朵把函數括住。欲達此，你必須先在MIP裏寫:
     setFunctionBracket==@{ , }@
  用完再改回來     
     setFunctionBracket==@{ , }
  如果你都不喜歡也可以自定，只要不跟內文混雜都可以，例如:
     setFunctionBracket==@[ , ]
     setFunctionBracket==begg , endd
     
   
    
### 程式預解
      MIP跑起你的程式，當看到include==*** 則載入這一行的內容成為程式的一部分
      再看到某一行以/開頭 則整行忽略 ， 例如 /a==1;;b==2 則這整行忽略
      再看到;; 則改為換行符號 但若這;;所在那一行有uvar則不要改   
      再看到某行是if== ， 下面又有一行endif== ， 則MIP知道這是一個區塊。
### 程式運作、洗染、遮罩
  (1)程式從第一行依序往下跑，當看到一行aa==bb ，MIP 就記住這份(關鍵字,它的值)， 
     當看到一行aa==
                   bb,123
                   cc,456
               dd==ff
     MIP發現aa換行，就往下繼續找，直到下一個關鍵字，所以變成
               aa==bb,123[cr]cc,456  其中[cr]代表一個換行符號
               dd==ff                這dd就只有兩個英文字母
     寫長一點的程式:
               aa==
                   bb,123
                   cc,456
               dd==ff                 
               aa==1
     第二次遇到aa，於是忘記前面aa是什麼，aa現在就是1                              
     程式往下跑，不斷發生文字置換。文字置換我常簡稱為洗染、洗字、染色。     
  (2)礙子
     當某個關鍵字的部份字不想被洗染，就要用 礙子[] 防止洗染，例如:
     aa==2
     show==I say a[]a=aa
     
     
     
     當程式突然跳到第j行再繼續跑，則第j行被(1~i-1)行的值染色
                                  第j+1行被(1~i-1),j行的值染色
                                  第j+2行被(1~i-1),j,j+1行的值染色
                                  第j+3行被(1~i-1),j,j+1,j+2行的值染色
  (3)當程式來到第i行，上述的色都染好了，再加一動作: 把這一行裏的 []改為無
        []是什麼，它是遮罩，用來防止某些字被染。色都染完後遮罩可以拆除了，也就是把[]改為無
     (3)上述的色都染好後，若當前這一行是aaa==func! parameter1 ! parameter2 這種型態，表示等號右方是一個function，那麼
          MT將解這function 送給aaa
          若aaa是個既定關鍵字 則MT會執行這個既定關鍵字的原定動作。
        

        什麼樣的字會被當作不定詞呢? 就是 fdv,[ui], [vi], mi1,mi2,mi3,mi4,mi5,mi6,mi7 
        凡是一個字裏有這些符號都會被當作不定詞，凡是不定詞都是主函數解完才被解開
        
        
     (6)矩陣可以被別人染色 但不能去染別人 
        例如    kk==3
                matrix2==
                 1,2,kk
                 4,5,6
        則矩陣內儲值將會是
                matrix2==
                 1,2,3
                 4,5,6        
        這矩陣內的值被染掉了。
        反過來如果矩陣想去染別人例如
                matrix2==
                  1,2,3
                  4,5,6
                show==say(matrix2)
                    
        則螢幕會顯示 say(matrix2) ，不會顯示 say(1,2,3,4,5,6)
        凡是以matrix開頭的詞只能被別人染色，不能去染別人
        這麼作是為了處理大型矩陣的效率
                
###預先定義好的字 舉例  
        #userID  這個字將被轉換成 你現在的帳號
        #enter   這個字將被轉換成 換行符號 
        #space   這個字將被轉換成 空白一格

###預先定義好的關鍵字 舉例    
   預先定義好的關鍵字會促使電腦做事
   例如下面這關鍵字sqlcmd ，將發送一段SQL給資料庫引擎，這一段SQL可能含有多個句子。發送前會先把okclick改成onclick
    sqlcmd==
	    some_SQL1;
		some_SQL2;
		some_SQL3;
		
	例如下面這關鍵字saveToFile ，將多行文字存到檔案fcc.txt裏
    saveToFile,fcc.txt==
        this is fcc line1
        this is fcc line2
        
	例如下面這關鍵字addString ，將多次收集文字以方便最後存到檔案裏
    addString,paragraph99_txt ==123
    addString,paragraph99_txt ==456
    saveToFile,paragraph99.txt==paragraph99_txt  
                   
### 預先定義好的函數 舉例                   
        若有程式碼如下
          showHtm==add!1!2
		畫面將顯示3
		也就是說add是一個函數，函數的參數以!分隔，這樣設計是因為允許逗點也是參數的內容
		  
        
                
### 給定預設值
        若有程式碼如下
           lover==Lily           
           comment==let go        
           lover==Mary
           show==I love lover
        程式來到第3行，發現第1行和第3行關鍵字相同，則以最近指定的值為準，也就是lover==Mary
        程式來到第4行，顯示 I love mary
                
        但若有程式碼如下
           lover==Lily      
           ..
           ..
           comment==below is a common-purpose section       
           lover==@{ifeq!lover!love[]r!mary!lover}
           show==I love lover
        
        
        此程式碼第二行的comment 往下置換，於是                   第三行cc不變   ，第四行不變            ，第五行不變
        此程式碼第三行的cc      往下置換，於是                                    第四行不變            ，第五行變成showhtm==3, hello John 
        此程式碼第四行的moreWord往下置換，下方已無moreWord字眼，                  所以                  ，第五行仍是showhtm==3, hello John 
        也就是moreWord出現兩次，只有第一個發生效果，第二個是預設值現在失效。
		當第二行以下是固定模組時，這方法可以用來改變預設值。

		
                         
###查詢資料庫資料

###新增多筆資料

###新增一筆資料

###刪除一筆資料

###修改一筆資料

###增刪修查一起工作

###顯示資料直轉橫(顯示樞紐報表)

###多維度靈活查詢

### 操作DB的指令: 延伸的SQL指令
       sqlcmd==select t='0922334455'              -- 這是常見的SQL 指令
       sqlcmd==select t='SQLF{mobiTEL$922334455}' -- 這是延伸的SQL 指令
               在執行SQL語句之前，本軟體發現 SQLF{***} ， 它開始解析這一字串
               它會把SQLF{mobiTEL$922334455}  分解為 主詞mobiTEL 受詞922334455  ，最後轉換成 0922334455
               它會把SQLF{mobiTEL$0922334455} 分解為 主詞mobiTEL 受詞0922334455 ，最後轉換成 0922334455
       
       SQLF{ifex$***}
       SQLF{ifnex$***}
       SQLF{equal$***}
       SQLF{range$***}
       SQLF{red$***} 將轉換成 <font color=red>***</font>

### 跨資料庫傳輸: 把文字檔轉入DB
            dataFrom
            dataTo
            dataToTable

### 跨資料庫傳輸: 經記憶體傳輸資料
### 跨資料庫傳輸: 經檔案多批次傳輸資料

### 呼叫外界: 發信
### 呼叫外界: 發簡訊
### 呼叫外界: URL get, post
### 呼叫外界: ftp
### 呼叫外界: 呼叫window command 或呼叫exe

### 被外界呼叫: URL get,post
### 被外界呼叫: 被VB, 被排程器

### 顯示畫面的修飾
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框 長度20
       aa==hello
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything
       aa==hello $; say anything 
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything 而框的長度拉長為30
       aa==hello $; say anything $; 30
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything 而框的長度拉長為30
       aa         ==hello      $;  say anything $; ii~30
	   key        ==value      $;  explainWord  $; typeWord   ( typeWord could be   "epwd"    "iibx"    "iib2"    "entr"    "hidn"    "mmbx"    "comb"   "ckbx"  )
	   ikey(cmNxy)  ival(cmNxy)    imrk(cmNxy)     ptyps(cmNxy) 
	   
### 安裝問題集解  
  可能問題:  看不到登入畫面， 看到 HTTP錯誤404.17  
  解決方法:  應檢查ASP.NET有沒有安裝，也就是
             控制面板》程序和功能》打開或關閉Windows功能> Internet信息服務> 網際網路服務> 應用程序開發功能> ASP.NET（把這個勾選起來）
    
  可能問題:  若wbec目錄被設定共用，IIS報錯 說虛擬目錄不存在 說沒有web.config
  解決方法:  不須添加web.config ，只要進iis-manager 按右鍵> 管理虛擬目錄> 進階設定> 實體路徑認證， 打入有存取權限的帳號密碼即可
             順便的，IIS寫檔案不成功的問題也解了
    
  可能問題:  畫面說程式有錯，但不能顯示明確原因
  解決方法:  在github檔案區還有一個小檔案web.config， 也複製到c:\MIP\webc即可。
    
  可能問題:  畫面說 c:\mip\webd 不能寫檔
  解決方法:  進iis-manager 按右鍵> 管理虛擬目錄> 進階設定> 實體路徑認證， 打入有存取權限的帳號密碼
             或是用檔案總管
	   