### 這是什麼
  這是一個軟體，運行一個程式語言MIP(macro interactive processing)及其操作介面，
  用來快速生產商用網頁，所以本軟體稱為MIP builder。  它內建幾十個動詞關鍵字，
  也內建認識巨集(宏，macro)，所以它能操控主機，也能操控其他語言去操控主機。
  它是一個程式解譯器，能產出互動式網頁，也能在背景運算，傳遞資料從這機到其他機；
  它是一個程式產生器，能組合你的程式模板，跳躍式或鑲嵌式組合，形成你要的程式碼；
  它是一個程式翻譯器，能翻譯你的變文成為標準的C語言或你要的語言。
  也能翻譯抽象圖形成為程式碼，方便你寫圖形辨認的程式，用在自動下圍棋。
  本軟體是一個語言，是一個工具，用來縮短程式碼，提升資訊人員的生產力。
  
### 適用場合  
  在多年前，我看到某資訊人員每天都在下SQL指令，來應付user的各種需求，
  他說user的需求變來變去很難寫成程式，要是有一個網頁型的SQL輸入框，
  讓他任意調整參數，調到滿意存起來就自動成為user的功能，這樣才好過日子。
  於是我作了一個生產程式的母機，這就是MIP的原型，也是MIP的第一功能。
  本文將舉例三個用MIP寫出來的軟體系統，當作應用範例: 
  倉庫撿貨系統，問卷系統，資料傳輸系統。

  這幾年來，資訊界流行一些越來越長的程式語言，表達一個微小動作就很費力，
  以c#或java為例，為了一句SQL要先寫一大堆字，這些都是固定字，
  等於是一串固定的長咒語，這麼長的咒語不能簡化成短語嗎?
  我們把長咒語視為低階語言，利用MIP內含的巨集、宏、macro的特性把它們改為短語，
  一次產生幾十個長程式，形成應用系統。這樣MIP的第二個應用場景。
  
  講到C語言，紐結&怎麼發音，星號*怎麼發音，為甚麼紐結發射卻由星號接收呢?
  若我們把 &x     改寫為 adrOf x    ，把 (int *x) 改寫為 (int byAdr x)，
  接著再把 int* x 改寫為 adrOf int x，順便把case自由落體，每層自動加break，
  是不是瞬間C就清楚多了? 這樣MIP就是一個程式矯正器。

  這幾年流行的程式語又更長了，程式中不斷宣告物件的屬性。
  1個屬性佔1行，1個物件有9個屬性，5個物件就45行， 
  這些物件都長得很像，整篇程式看起來就幾個字不斷的繞口令。
  難道我們不能把它排成9乘5的矩陣，讓表達簡潔嗎?所以我讓MIP有操作矩陣的能力。
  助你從一行一行寫程式的一維視角，轉為一矩陣一矩陣寫程式的二維視角。
  若進一步把圍棋的點位視為矩陣，叫MIP來描述它成為程式，寫圖形辨認就容易多了。
  本文將從MIP的基本指令開始說明，延伸談到高級應用。

### 多於其它巨集語言的特點
  MIP語言最核心功能是文字置換，歸類它是巨集語言沒錯。但它有幾個特別的長處。
  
 (特點1 網頁輸入輸出)它的預設操作環境是網頁，輸入從網頁輸入，輸出也是網頁。
    輸出網頁裏還可以有輸入框，讓你再輸入下一波，得到下一波的網頁輸出。
    所以它運作起來就是一個完整的應用功能，不是把文字置換完畢就結束了。
  
 (特點2 執行)文字置換遇到關鍵字，會執行關鍵動作，例如操作資料庫，讀寫檔案，
    發email，發FTP，發http訊號給其它電腦。它特別設計來搭配資料庫，
    方便你組合SQL語句，跨主機讀寫SQL產出的結果
  
 (特點3 跳躍指令)一般的巨集語言(宏語言)都是依序往下，偶爾有簡單的goto跳躍。
    本語言除了goto 還有gosub跳去又跳回，也有if-then，也有for-next

 (特點4 向量式指令)本語言可以置換一字一詞，更可利用不定詞來置換一整個向量，
    或置換一整個矩陣，使一行MIP程式代表終端幾十行程式。若你要寫幾十支程式，
    你找出這幾十支程式共同的部份，抽出相異的部份，把相異的部份排成矩陣，
    呼叫MIP，它就寫完這幾十支程式，實現軟體微縮術。+
 
### 安裝  
  本軟體由1個程式檔以及3個參數設定檔構成。
  (MIP.aspx,     cDBlist.txt, cSPlist.txt, cUSlist.txt)
  請到 https://github/longinlin/MIP3.1 點畫面上的[view code]下載
  本軟體只能在windows+IIS作業環境下使用。
  
  打開你要安裝的電腦，
  建子目錄c:\MIP\webc ，貼入MIP.aspx，
  建子目錄c:\MIP\webd ，貼入上述後面3個檔案， 
  建子目錄c:\MIP\webt ，備用，此目錄要允許IIS寫入資料，
  建子目錄c:\MIP\webq ，備用，此目錄要允許IIS寫入資料，
  接著尋找這電腦上該有的IIS管理員，
    若看不到IIS卻看到伺服器管理員，點進去看到角色，
    角色下有網頁伺服器， 按右鍵新增角色服務，就可顯示IIS
  接著在IIS裡建立虛擬目錄MIP，使實際位置指向 c:\MIP\webc
  接著打開瀏覽器，網址打localhost/MIP/MIP.aspx，
  看到請你登入的畫面即安裝完成。
  微軟各版常讓人安裝受挫，若遇安裝不順，淡定，參看文末的: ### 安裝問題集解

### 寫 Hello world
  打開瀏覽器，網址打localhost/MIP/MIP.aspx，看到登入畫面
  輸入帳密(admin,admin9)，看到出現了上下兩個輸入框，
  於下框寫 
    show== Hello world
  按[確定] 即可看到結果
  
### 寫一個簡單的加法
  於下框寫
    aabb==eval! 10+5
    ccdd==dateadd!!5
    show==aabb , ccdd
  按[確定]即可看到 15 逗點 今天加5天的日期
  
    show==eval!3*5
  按[確定]即可看到 15 
  
### 顯示九九乘法表
  於下框寫
    uuuu==1,2,3,4
    vvvv==4,5
    show==mgu2v!uuuu!vvvv![ui]x[vi]=@{eval![ui]*[vi]}!td 
  按[確定]即可看到九九乘法表之一部份:
    1x4=4  2x4=8  3x4=12  4x4=16
    1x5=5  2x5=10 3x5=15  4x5=20
     
### 寫一個簡單的SQL 或呼叫DOS指令
  於下框寫
    conndb==db36
    sqlcmd==select * from tbyy
  按[確定]即可看到 tbyy 的內容。

  要呼叫DOS指令，則於下框寫
  doscmd==
    echo 123 > c:\tmp\test2.txt
    echo 456 > c:\tmp\test3.txt
  按[確定]即可在 c:\tmp 看結果
   
### 輸入、計算、輸出
  所有的電腦程式都可分解為(輸入、計算、輸出)三段，在MIP如何表達呢?
 
  於上框寫 who==John          這就是輸入
  於下框寫 aa ==add!2!3       這就是計算
  下框再寫 show==who, 2+3=aa  這就是輸出
  按[確定]後，畫面出現 hello John 這就是輸出到螢幕上
  
  如果要輸出到檔案呢? 只要於下框寫:
    answ==who, 2+3=aa
    saveToFile, a123.txt ==answ
  按[確定]就會輸出到檔案c:/MIP/webt/a123.txt 。 
  若螢幕回報說有錯，說不能寫入，則要叫起IIS或檔案總管去修改權限，請看安裝說明段。
  
  (輸入、計算、輸出)三段都有了，想把以上的程式變成一般人使用的功能，怎麼做?
  看到螢幕最下方還有兩個細細的輸入框，分別填上 test2.mip 和 測試2，
  再按[save new  ]，網頁顯示 儲存完成，
  再按[show spList]，網頁顯示 你剛剛製造的功能 [測試2]。
  
  你能看到上述這些操作畫面，因為當初你是用資訊工程師 admin 的身分登入。
  admin登入的操作模式就是"工程師模式"。 
  若想看看一般user的使用效果，你要先登出，換以某user的帳密登入。
  請從功能列表中選擇[登出]，網頁顯示請輸入帳密的畫面，
  輸入帳密(0800,0809) 按[登入]，就看到網頁有一個[測試2]的超連結。
  現在你可以任意點選，現在叫做 "使用者模式"， 你可以像一般使用者操作它。
    
### 呼叫更多功能
  從上面的例子可以看到==是指定符號，
  不要在乎指定符號左右方的空白，那些空白都會切掉。也不要在乎其左右方是數字或文字，
  因為本軟體裏面只有一種資料型態，那就是文字。
  本軟體在乎文字之上可以建立文字的序列，也就是向量，
  在乎文字可以建立二維序列，也就是矩陣，
  在乎文字可以組成一段文章，也就是程式。
  本軟體在乎文字、向量、矩陣、文章的各種組合，目標是簡化程式寫作。

  要充分發揮MIP的功能，
  還需瞭解: 編輯三個清單: 功能清單、 使用者清單、 資料庫清單，
  接著瞭解: 自定關鍵字、既定關鍵字、自定函數、既定函數， 
  接著瞭解: 洗染、解函、解罩，把函數當參數，
  最後瞭解: 關鍵字for-next, if-else-endif, gosub
  這樣MIP就介紹完整了，它能幫助你以簡短的文字表達意念，不用寫長程式。
  以下就從編輯"功能清單" 開始說明。
  
  
### 編輯"功能清單"
  本軟體把一個公司需要的眾多功能顯示在一頁畫面上，讓使用者點選。
  要編輯功能清單就打開c:\MIP\webd\cSPlist.txt，看到如下內容:
    [td]  
    [tf]功能段代號A, 功能段名稱A
        程式檔名1,   程式名稱1  
        程式檔名2,   程式名稱2  
    [tf]功能段代號B, 功能段名稱B
        程式檔名3,   程式名稱3  
        程式檔名4,   程式名稱4 
  以[td]開頭的這一行使功能清單向右換欄，以免清單往下太長。
  以[tf]開頭的這一行代表其下方一小段是一個功能段，
  將來在cusList.txt裏可以指定某人可以操作幾個功能段。
 
### 編輯"使用者清單"
  本軟體可以管理使用者權限，
  打開c:\MIP\webd\cUSlist.txt
  每一行的欄位依序是姓名、帳號、密碼、 公司名稱、 部門名稱、 員工工號、 可允許使用的功能段
  本軟體可以允許多個公司多個部門的人員一起使用 所以要寫下 公司名稱 部門名稱 員工工號 
  若只允許某人僅能使用某3個功能段 則在 "可允許使用的功能段" 那欄寫上3個功能段名稱，例如 aa bb cc，
  若要允許某人可以使用全部功能段  則在 "可允許使用的功能段" 那欄寫上all

### 編輯"資料庫清單"
  MIP的基本運作不需資料庫，若你讓它連接到多個資料庫，它就如虎添翼。
  連接方式如下，打開 c:\MIP\webd\cDBlist.txt 看到如下內容
     HOME      : ms    : some connection string1
     db123     : ms    : some connection string2
     db456     : ms    : some connection string3
  第一行宣告一個預設的資料庫，將來寫程式沒說連接哪個資料庫，就是連接這一個       
  第二行宣告一個稱謂db123，以後只要說連接db123， MIP就去連接這資料庫
  接著在MIP工程畫面輸入一些字，舉例:
      conndb==db123
      sqlcmd==select * from tb2
  就可看到資料表 tb2 了
  
### 自定關鍵字、既定關鍵字 
  在工程畫面寫:
      x2==2
      x3==3
      show==x2+x3
  其中x2和x3就是自定關鍵字，MIP原本不認識x2和x3，你定義了它們，MIP就記住了。
  其中show  就是既定關鍵字，MIP執行show既定的動作，也就是顯示，顯示了 2+3 
  上述畫面只顯示2+3 ，MIP不會加在一起嗎，會
      show==add!x1!x2      
  畫面會顯示5 這裏用到了一個既定函數add。

### 自定函數、既定函數
  既定函數就是預先定義好的函數，除了add之外還有很多，例如通用型的計算函數eval:
      show==eval!2*3+1  
  畫面會顯示7 
  又例如 比較相等與否的函數 ifeq:
      x2==2
      show==ifeq!x2!2!yes2 !not2  
  這樣會顯示yes2  
  從例子看得出來，函數的參數用驚嘆號隔開。
  函數也可以夾雜在字裏行間使用，例如:
      show== Hi, I was happy in recent @{eval!2*3+1} days 
  也就是整個函數用@{}括住。 
  @{}在口語怎麼唸呢?  @看起來像是ca ， 所以@{} 唸作call ， 把@當動詞。
  @{function3!parameter1!parameter2} 唸作call fucntion3
  @{function3!parameter1!parameter2} 整串也可以簡稱為@函數，把@當形容詞。 
  
  在show==...之後按下[確定]，於是畫面顯示 
      Hi, I was happy in recent 7 days    
  除了既定函數，你也可以自己定義函數，例如:
      myFunc==I have someOne
      show==@{myFunc!have=love!someOne=Mary}
  畫面會顯示            I love Mary 
  你不用宣告自定函數開始結束，也不用宣告參數。自定函數就是字，一串字。
  
  有些程式語言例如c或java，特別喜歡用{}
  為了讓MIP可以好好操控並生產這類的程式，可以改變@函數的括號，例如:
     aa==@{func3!p1!p2}@ 
  用兩個@ ，像是兩個耳朵，把函數括住。欲達此，你必須先寫明:
     setFunctionBracket==@{ , }@
  你不喜歡這種括號了，可以再改回來 
     setFunctionBracket==@{ , }
  如果你都不喜歡也可以隨時自定括號，連@都不要，例如:
     setFunctionBracket==begg , endd
     
   
    
### 程式預解
      MIP跑起你的程式，當看到include==*** 則載入這一行的內容成為程式的一部分
      再看到某一行以/開頭 則整行忽略 ， 例如 /a==1;;b==2 則這整行忽略
      再看到;; 則改為換行符號 但若這;;所在那一行有uvar則不要改   
      再看到某行是if== ， 下面又有一行endif== ， 則MIP知道這是一個區塊。
### 單一行程式運作順序: 洗染、解函、解罩
  (一行程式內部動作1)洗染:
     程式從第一行開始往下跑，當看到一行 A==B ，MIP就記住了(關鍵字,它的值)=(A,B)
     當看到一行aa==
                   bb,123
                   cc,456
               dd==ff
     MIP發現aa換行，就往下繼續找，直到下一個關鍵字，所以形成
               aa==bb,123[cr]cc,456  其中[cr]代表一個換行符號
               dd==ff                這dd的值只有兩個英文字母
     MIP一行一行都記住了，繼續往下跑，對下方文字進行置換，例如
               aa==1
               b1==2
               show==baac ready 
     aa置換這一行的右方，於是 
               show==b1c ready
     接著b1置換這一行的右方，於是
               show==2c ready
     於是顯示
                     2c ready
     程式往下跑，文字被上方文字置換。文字置換稱為洗染。洗染有幾個特點: 
     
     (洗染特點1)同一文字可以一再洗染，例如:
               aa==1
               dd==ff                 
               aa==2               
     當MIP第二次看到aa，MIP不管aa以前是什麼，aa現在就是2。
     又例如:
               aa==0
               label==runway
               aa==add!aa!1
               show==aa,goto,
               goto==runway

     這裏讓aa一再重複洗染。這段程式將顯示               
         1, 2, 3, ...40, 41, {jump too many times}    
     這段程式本是無限迴圈，但MIP限制只能迴圈40次，所以MIP停下來。         
               
     (洗染特點2)有一些關鍵字的值可能含有幾十萬個英文字母，
     你允許別的關鍵字洗染它，但你不想允許它洗染別的關鍵字，
     這時你要給它取名字用matrix開頭，例如叫它matrix1或matrix2，請看這程式片段:
             kk==3
             matrix2==
              1,2,kk
              4,5,6
             show==say(matrix2)
     則矩陣內儲值將會是
             matrix2==
              1,2,3
              4,5,6        
     矩陣內的值被洗染。而螢幕會顯示 say(matrix2)，螢幕不會顯示say(1,2,3,4,5,6)
     
  (一行程式內部動作2)解函:                      
     當來到某一行kk==vv，文字被vv洗染後，字面上還有函數將會被解開，
     舉例一:
               say==said
               kkk==ifeq!1!1! say y !say n   
            右方整個是一個函數，於是解開函數，簡化成為
               kk==said y
     舉例二: 
               kkk==hello @{ifeq!1!1! say y !say n},cc 
            @函數夾雜於字裏行間，於是@函數被解開，簡化成為
               kkk==hello say y, cc
     舉例三:
            若某一行整個是一個函數，其參數是一個@函數，應該先解開@函數:
               aa==1
               kk==ifeq! 2 !  @{add!aa!1}  ! see 2 ! see unknown
            則簡化為
               kk==ifeq! 2 !  2            ! see 2 ! see unknown
            再簡化為
               kk==see 2
    
            說"應該先解開@函數"， 就暗示說有時候應該"後解開" ，
            當@函數內的參數含有 [ui , [vi , [mi 這三個字時 ，
            MIP會先解開外層函數，再處理字裏行間的@函數
     舉例四:
               aa==1
               show==gu1v!4,5,6  !  @{add!aa![vi]}  !  +
            它被洗染變成
               show==gu1v!4,5,6  !  @{add!1 ![vi]}  !  +
            再被解開外層變成
               show==@{add!1!4} + @{add!1!5} + @{add!1!6} 
            再被解開內層的@函數
               show==5 + 6 + 7
            於是顯示
                   5 + 6 + 7  
     這種@函數讓外層先做完，它接在後面做的行為稱為: 後解開。
     為甚麼要後解開? 就像一顆糖球外殼先溶解，裏面的小小球再溶解，
     瞬間在舌尖釋放出繽紛的味道。
     只有後解開才能瞬間釋放出繽紛的程式碼，大量減低你的碼字寫作。
     給它取個英文名吧: calling-function-after-vector-solved 
                 
  (一行程式內部動作3)解罩
     當某個字不想被洗染，就故意把[]擠在字裏防止洗染，例如:     
        aa==2
        show==I say a[]a=aa
     畫面應顯示 
        I say a[]a=2
     這個[]是一個既定關鍵字，我稱它為遮罩，用途是防止洗染。
     但MIP在顯示這句子的前一瞬間把[]去掉，所以實際顯示為:
        I say aa=2
     在左方關鍵字收到右方值之前，MIP自動把遮罩去掉，稱為解罩。
     
  (一行程式內部動作,總結) 一行程式內部的運作順序是:
     凡是MIP看到 kk==vv 這樣的句子，MIP把前面認識的關鍵字依序灌進去洗染，
     染後裏面也許有函數，MIP就解函
     解函後裏面也許有[]，MIP就解罩。
     如此處理後的值傳給左方kk，
     若左方kk是一個既定關鍵字，MIP就按照既定的動作做事，
     然後MIP再跑下一行，程式就這麼一行一行運作。
                 
### 程式跳躍 goto, gosub
  程式運作是一行一行依序往下，但可以跳躍。最基本的跳躍就是goto ，
  還有 if ... then ... else ... endif
  還有 for ... next
  還有 forEach ... next
  還有 gosub label ... label ... return
  
  (跳躍1)goto 舉例:
                i==2
                goto==ifeq! i! 2! work2
                show==say1
                exit==...
                
                label==work2
                show==say2
         這例子會顯示 say2 。 goto可以向下方的label跳也可以向上跳。
         
  (跳躍2)if 舉例:
                 i==2
                 if==ifEq!i!2
                     show==say2
                 else==
                     show==say1
                 endif==
         這例子會顯示 say2 
         if那一行的寫法一定要寫成 if==if*** ，一定要叫某個二擇一函數，
         函數後只要寫想比較什麼，至於[比較成功]或[比較失敗]怎麼處理不要寫。
         換行才開始寫[比較成功]做什麼事，再寫else做什麼事。     
         
  (跳躍3)for 舉例:
                 for==ii ! 1 ! 9 !2
                     show==sayii,
                 next==
         這例子會顯示 say1,say3,say5,say7,say9
                        
  (跳躍4)foreach 舉例:
                 foreach==ii!9,11,88
                     show==sayii,
                 next==
         這例子會顯示 say9,say11,say88
                 
  (跳躍5)gosub 舉例:
           aa==1
           gosub==ifeq!aa!1!work1!work2
           aa==add!aa!1
           gosub==ifeq!aa!1!work1!work2
           aa==add!aa!2
           gosub==work1
           show==done,
           exit==..

           label==work1
           show==do work1(aa),
           return==

           label==work2
           show==do work2,
           return==

          按[確定]後 將顯示 do work1(1), do work2, do work1(4), done, ..  
          
           
  
  


###預先定義好的關鍵字 全集 unfinish   
   預先定義好的關鍵字會促使電腦做事
   (*) sqlcmd ，將發送一段SQL給資料庫引擎，這一段SQL可以含有多個句子。
    發送前會先把okclick改成onclick
    sqlcmd==
	    some_SQL1;
		some_SQL2;
		some_SQL3;
		
	(*) saveToFile ，將多行文字存到檔案fcc.txt裏
    saveToFile,fcc.txt==
        this is fcc line1
        this is fcc line2
        
	(*) addString ，將多次收集文字以方便最後存到檔案裏
    addString,paragraph99_txt ==123
    addString,paragraph99_txt ==456
    saveToFile,paragraph99.txt==paragraph99_txt  
                   
### 既定函數 全集 
  MIP有區分大小寫的，自定函數有區分大小寫，但這樣有些僵硬，
  所以讓既定函數的名稱可以任意大小寫，驚嘆號前後的空白都不計。
  下面列出預先定義好的函數。
 *f add                   例:  add !1!2
 *f eval                  例:  eval!1!2
 
 *f 二者擇一的一些函數:
 *f ifEq      若等於           例: ifEq     !2  !2   !is2!not2   
 *f ifNe      若不等於         例: ifNe     !1  !2   !ne !eq
 *f ifGt      若大於           例: ifGt     !1  !2   !no !yes
 *f ifGe      若大於等於       例: ifGe     !1  !2   !no !yes
 *f ifLt      若小於           例: ifLt     !1  !2   !yes!no       
 *f ifLe      若大於等於       例: ifLe     !1  !2   !yes!no   
 *f iflcEq    若小寫後相等     例: iflcEq   !HH ! hh !yes!no
 *f ifLenEq   若字的長度相等   例: ifLenEq  ! ab! cd !yes!no
 *f ifIn      若內在於         例: ifIn     ! bc!abcd!yes!no
 *f ifNum     若為數字         例: ifNum    !1.2     !yes!no
 *f ifPosi    若為正數         例: ifPosi   !123     !yes!no
 *f ifUsa     若是西元yyyymmdd 例: ifUsa    !20040102!yes!no
 *f ifRoc     若是民國 yyymmdd 例: ifRoc    !  930102!yes!no
 *f ifBetween 若界於           例: ifBetween!xy !aa  !dd !yes!no

 *f 常用於串接SQL句子的函數: 
 *f ifV      ,seeV       若有值          
       例如:
            inputx123==456
            condition==ifv!inputx123!and xqty=inputx123
            show     ==where 1=1 condition    將顯示:
                       where 1=1 and xqty=456
       又例如:         
            inputx123==
            condition==ifv!inputx123!and xqty=inputx123
            show     ==where 1=1 condition    將顯示:
                       where 1=1              也就是跳過此條件
            也可以緊湊寫成一句:   
            show==where 1=1 @{ifv! inputx123! and xqty=inputx123}
                      
           
 *f andRange  製造一段字 常用於SQL的查詢條件  例: 
      inputsR1R2==2004/01/02-2004/03/02
      condition2==andRange!kdate!inputsR1R2
      show      ==where 1=1 condition2        將顯示:
                  where 1=1 and( kdate between '2004/01/2' and '2004/03/02')
      又例如:         
      inputsR1R2==2004/01/02
      condition2==andRange!kdate!inputsR1R2
      show      ==where 1=1 condition2       將顯示:
                  where 1=1 and( kdate = '2004/01/2' )
      又例如:         
      inputsR1R2==
      condition2==andRange!kdate!inputsR1R2
      show      ==where 1=1 condition2       將顯示空白 也就是忽略此條件:
                  where 1=1         

 *f 有關日期的一些函數:
                  
 *f ifValidDateROC 查輸入日期合理否 例: show==dateVerify!991301    將顯示錯誤  
                   又且 若年份在00到150之間為合理，        在此之外則顯示錯誤 
 *f ifValidDateUSA 查輸入日期合理否 例: show==ifValidDate!20041301 將顯示錯誤  
                   又且  若年份在1900到2040間為合理，      在此之外則顯示錯誤 
 *f ifValidDate    同ifValidDateUSA
 
 
 *f dateConvROC    把各種日期表示法轉成你要的格式，輸出年份為民國，例如:
                   show==dateConvROC!Jan 22, 1999!yyyy/mm/dd 將顯示  88/01/22
 *f dateConvUSA    把各種日期表示法轉成你要的格式，輸出年份為西元，例如:
                   show==dateConvUSA!Jan 22, 1999!yyyy/mm/dd 將顯示1999/01/22
 *f dateConv       同dateConvUSA

 
 *f dateAddROC     某西元日期或民國日期，加個幾天，輸出民國日期，例如:
                   show==dateAddROC!19270101!3!yyyymmdd
 *f dateAddUSA     某西元日期或民國日期，加個幾天，輸出西元日期                   
 *f dateAdd        同dateAddUSA
 
 
 *f dateRange      某西元日期或民國日期，二者相距幾天   例如: 
                   show==dateRange! 20041130! 20041202  將顯示2               
                   show==dateRange! 20041130!   931202  將顯示2               
            

 
 *f 以下是字串函數:                  
 *f inner          取界內的值       例: show   ==inner!I Love Mary!I!M 將顯示 Love
 *f mobileTel      電話號碼前面補0  例: show   ==mobileTEL!988112233   將顯示 0988112233
                   
 *f cookieW        對某cookie寫值   例: jobDone==cookieW!cook22   !v22
 *f cookieR        對某cookie拿值   例: cook22V==cookieR!cook22   


      
		  
                         
###查詢資料庫資料

###新增多筆資料

###新增一筆資料

###刪除一筆資料

###修改一筆資料

###增刪修查一起工作

###顯示資料直轉橫(顯示樞紐報表)

###多維度靈活查詢

### 操作DB的指令: 延伸的SQL指令
       sqlcmd==select t='0922334455'              -- 這是常見的SQL 指令
       sqlcmd==select t='SQLF{mobiTEL$922334455}' -- 這是延伸的SQL 指令
               在執行SQL語句之前，本軟體發現 SQLF{***} ， 它開始解析這一字串
               它會把SQLF{mobiTEL$922334455}  分解為 主詞mobiTEL 受詞922334455  ，最後轉換成 0922334455
               它會把SQLF{mobiTEL$0922334455} 分解為 主詞mobiTEL 受詞0922334455 ，最後轉換成 0922334455
       
       SQLF{ifex$***}
       SQLF{ifnex$***}
       SQLF{equal$***}
       SQLF{range$***}
       SQLF{red$***} 將轉換成 <font color=red>***</font>

### 跨資料庫傳輸: 把文字檔轉入DB
            dataFrom
            dataTo
            dataToTable

### 跨資料庫傳輸: 經記憶體傳輸資料
### 跨資料庫傳輸: 經檔案多批次傳輸資料

### 呼叫外界: 發信
### 呼叫外界: 發簡訊
### 呼叫外界: URL get, post
### 呼叫外界: ftp
### 呼叫外界: 呼叫window command 或呼叫exe

### 被外界呼叫: URL get,post
### 被外界呼叫: 被VB, 被排程器

### 顯示畫面的修飾
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框 長度20
       aa==hello
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything
       aa==hello $; say anything 
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything 而框的長度拉長為30
       aa==hello $; say anything $; 30
	   
   下面這一行 在應用模式下 會顯示成 aa: 後面帶一個輸入框  框之右方有提示文字 say anything 而框的長度拉長為30
       aa         ==hello      $;  say anything $; ii~30
	   key        ==value      $;  explainWord  $; typeWord   ( typeWord could be   "epwd"    "iibx"    "iib2"    "entr"    "hidn"    "mmbx"    "comb"   "ckbx"  )
	   ikey(cmNxy)  ival(cmNxy)    imrk(cmNxy)     ptyps(cmNxy) 
	   
### 安裝問題集解  
  可能問題:  找不到這電腦上的IIS管理員，
             若有看到[伺服器管理員]這圖示，點它，進去看到角色，
             角色下有網頁伺服器， 對它按右鍵新增角色服務，就可顯示IIS
    
  可能問題:  輸入網址 MIP/MIP.aspx 看不到登入畫面， 卻看到 HTTP錯誤404.17  
  解決方法:  應檢查ASP.NET有沒有安裝，也就是:
             開始> 控制面板> 程序和功能> 打開或關閉Windows功能> 
             Internet信息服務> 網際網路服務> 應用程序開發功能> ASP.NET
             把這個勾起來
    
  可能問題:  若webc目錄被設定共用後，IIS卻說虛擬目錄不存在，說沒有web.config
  解決方法:  不須添加web.config ，只要進iis-manager 按右鍵> 管理虛擬目錄> 
             進階設定> 實體路徑認證， 打入有存取權限的帳號密碼即可
             順便的，IIS寫檔案不成功的問題也解了
    
  可能問題:  畫面說程式有錯，但不能顯示明確原因
  解決方法:  在github檔案區還有一個小檔案web.config，複製到c:\MIP\webc即可。
    
  可能問題:  畫面說 c:\mip\webd 不能寫檔
  解決方法:  進iis-manager 按右鍵> 管理虛擬目錄> 進階設定> 實體路徑認證， 打入有存取權限的帳號密碼
             或是用檔案總管
	   